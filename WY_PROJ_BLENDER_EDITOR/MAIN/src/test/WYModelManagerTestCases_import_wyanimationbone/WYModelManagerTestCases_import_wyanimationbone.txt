['Project name', 'WY_PROJ_BLENDER_EDITOR', '', '', '', '', '', '', '', 'Note']
['Created by', 'NICK JANG', '', '', '', '', '', '', '', 'Creator of this test case data']
['Reference documents', 'Google Drive', '', '', '', '', '', '', '', 'Reference links']
['Date of creation', '2018-02-20', '', '', '', '', '', '', '', 'Date of creation']
['Last update', '2018-02-20', '', '', '', '', '', '', '', 'Date of last update']
['Test case file name', '..\\..\\test\\WYModelManagerTestCases_import_wyanimationbone\\WYModelManagerTestCases_import_wyanimationbone.py', '', '', '', '', '', '', '', 'Unit test case file - Relative to OAuth test case generator to export with (Will be appended to test case generator working directory) - Exported in the main WYCoordsys class folder inside WYCoordsysTestCases folder']
['Test case data file name', '..\\..\\test\\WYModelManagerTestCases_import_wyanimationbone\\WYModelManagerTestCases_import_wyanimationbone.txt', '', '', '', '', '', '', '', 'Unit test case data file - Relative to OAuth test case generator to export with (Will be appended to test case generator working directory) - Exported in the main WYCoordsys class folder inside WYCoordsysTestCases folder']
['Testing class file name', '..\\..\\main\\WYModelManager\\WYModelManager.py', '', '', '', '', '', '', '', 'Testing file destination - Relative to OAuth test case generator to export with (Will be appended to test case generator working directory) - Use to precompile in the unit test case file header at the very top before class defintion']
['Testing class function name', 'import_wyanimationbone(wyanimation, wyanimation_file_obj)', '', '', '', '', '', '', '', 'Main testing function definition name with parameter names']
['Unit test case class name', 'WYModelManagerTestCases_import_wyanimationbone', '', '', '', '', '', '', '', 'Main unit test case class name for class definition']
['Unit test case class description', 'Unit test case for class WYModelManager import_wyanimationbone() function', '', '', '', '', '', '', '', 'Main unit test case description to generate Pydoc under the class definition']
['Unit test case class header imports', '# Pre-condition: WYArmature is tested.\n# Pre-condition: WYArmatureBone is tested.', '', '', '', '', '', '', '', 'Main unit test case import code line - sys, os, math is imported by default and unittest will be imported in default since this is test case generator']
['Unit test case result file name', '..\\..\\test\\WYModelManagerTestCases_import_wyanimationbone\\WYModelManagerTestCaseResult_import_wyanimationbone.txt', '', '', '', '', '', '', '', 'Unit test case execution result output file - Relative to OAuth test case generator to export with (Will be appended to test case generator working directory) - Exported in the main WYCoordsys class folder inside WYCoordsysTestCases folder']
['', '', '', '', '', '', 'Param name', 'wyanimation', 'wyanimation_file_obj']
['', '', '', '', '', '', 'Param type', 'WYAnimation', 'File']
['', '', '', '', '', '', 'Param description', 'WYAnimation object to store the imported WYAnimationBone objects imported from same file.', 'File object opened for importing WYArmature object.']
['Note: Unique test case ID', 'Note: For Pydoc', 'Note: For Pydoc', 'Note: For code and Pydoc', 'Note: Without brackets', 'Note: For Pydoc', 'Note: Allocate class object variable name', 'Note: Parameter used for testing class object allocation to test the function in the class\n\nimport_wyanimationbone: classvar = Class(alloc_params) \r\n__str__: classvar = Class(alloc_params)\r\nother functions: classvar = Class(alloc_params)', '', 'Note: Testing funciton expected output - this will be writen to assertion code like this:\nimport_wyanimationbone: classvar = Class(alloc_params) \n              assertTrue(classvar.expected_result)\n__str__: classvar = Class(alloc_params)\n              assertTrue(str(classvar) == expected_result)\nother functions: classvar = Class(alloc_params)\n                          assertTrue(classvar.testfunc(func_params) == expected_result)', 'Head', '', '', 'Tail', '', '', '', '', '', '', '', '', '', 'Note: Lines of codes to be appended to current test case function body MUST add 8 space characters of each line  to match the indentation', 'Note: Lines of codes to be prepended to current test case function body MUST add 8 space characters of each line to match the indentation', 'Note: If the full testing function body code exists then all the values in other column cells will be the refrence to be written to the Pydoc, and the function body itself will be the code indicated in current column cell. So if this column value is empty then the testing code will be generated using the data from other cells, else other column cells will be the reference to generate the testing function pydoc data.']
['NC - Test Case ID', 'Test case title', 'Test case description', 'Testing class name', 'Testing function name', 'Testing function return type', 'Testing variable name', 'Func param 01', 'Func param 02', 'Expected result 01', 'Test case data lists note', 'Test case data lists note', 'Test case data lists note', 'Test case data lists note', 'Test case data lists note', '', 'Test case data lists note', 'Test case data lists note', 'Test case data lists note', 'Test case data lists note', 'Test case data lists note', 'Test case data lists note', 'Note', 'Code lines before testing body', 'Code lines after testing body', 'Test case funciton body full code']
['TC_NC_0001', 'WYModelManager import_wyanimationbone function testing normal case 0001', 'Testing if the WYAnimationBone objects are imported from given path "abn TestAnimationBoneName0001\\nkf 0 {\\nabh 1.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 1.0 0.0 0.0\\nrotq 1.0 1.0 0.0 0.0\\nsca 1.0 0.0 0.0\\n}\\n" through "import_wyanimationbone" function resulting the data values imported from file is equal to the expected value where animation bone is name "TestArmatureObject0001" location vector value[1,0,0], rotation quaternion value [1.0,1.0,0.0,0.0] and scale vector value [1,0,0] on keyframe 1 is exported.', 'WYModelManager', 'import_wyanimationbone', 'void', 'wymodelmanager0001', 'myArmature = bpy.data.armatures.new("TestArmatureObject0001")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0001", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0001")\n        myArmatureBone.head = [1,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [1.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [1.0,1.0,0,0]\n        myArmaturePoseBone.scale = [1.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=1)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=1)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=1)\n        bpy.context.scene.frame_set(1)', 'with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0001.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0001\\nkf 0 {\\nabh 1.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 1.0 0.0 0.0\\nrotq 1.0 1.0 0.0 0.0\\nsca 1.0 0.0 0.0\\n}\\n")', 'wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (1.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (1.0,1.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (1.0,0.0,0.0)', '1', '[1,0,0]', '[0,0,0]', '1.0', '0.0', '0.0', 'TestArmatureObject0001', 'TestAnimationBoneName0001', 'TestFile0001', 'abn TestAnimationBoneName0001\\nkf 0 {\\nabh 1.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 1.0 0.0 0.0\\nrotq 1.0 1.0 0.0 0.0\\nsca 1.0 0.0 0.0\\n}\\n', "myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [1.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [1.0,1.0,0,0]\n        myArmaturePoseBone.scale = [1.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path='location',frame=1)\n        myArmaturePoseBone.keyframe_insert(data_path='rotation_quaternion',frame=1)\n        myArmaturePoseBone.keyframe_insert(data_path='scale',frame=1)\n        bpy.context.scene.frame_set(1)", '..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0001', '', '', '', '        myArmature = bpy.data.armatures.new("TestArmatureObject0001")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0001", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0001")\n        myArmatureBone.head = [1,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [1.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [1.0,1.0,0,0]\n        myArmaturePoseBone.scale = [1.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=1)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=1)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=1)\n        bpy.context.scene.frame_set(1)\n        wyanimation = WYAnimation()\n        wymodelmanager0001 = WYModelManager()\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0001.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0001\\nkf 0 {\\nabh 1.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 1.0 0.0 0.0\\nrotq 1.0 1.0 0.0 0.0\\nsca 1.0 0.0 0.0\\n}\\n")\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0001.wyan\') as content_file:\n            wymodelmanager0001.import_wyanimationbone(wyanimation, content_file) \n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale)\n        self.assertTrue(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (1.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (1.0,1.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (1.0,0.0,0.0))']
['TC_NC_0002', 'WYModelManager import_wyanimationbone function testing normal case 0002', 'Testing if the WYAnimationBone objects are imported from given path "abn TestAnimationBoneName0002\\nkf 0 {\\nabh 2.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 2.0 0.0 0.0\\nrotq 2.0 2.0 0.0 0.0\\nsca 2.0 0.0 0.0\\n}\\n" through "import_wyanimationbone" function resulting the data values imported from file is equal to the expected value where animation bone is name "TestArmatureObject0002" location vector value[2,0,0], rotation quaternion value [2.0,2.0,0.0,0.0] and scale vector value [2,0,0] on keyframe 2 is exported.', 'WYModelManager', 'import_wyanimationbone', 'void', 'wymodelmanager0002', 'myArmature = bpy.data.armatures.new("TestArmatureObject0002")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0002", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0002")\n        myArmatureBone.head = [2,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [2.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [2.0,2.0,0,0]\n        myArmaturePoseBone.scale = [2.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=2)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=2)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=2)\n        bpy.context.scene.frame_set(2)', 'with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0002.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0002\\nkf 0 {\\nabh 2.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 2.0 0.0 0.0\\nrotq 2.0 2.0 0.0 0.0\\nsca 2.0 0.0 0.0\\n}\\n")', 'wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (2.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (2.0,2.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (2.0,0.0,0.0)', '2', '[2,0,0]', '[0,0,0]', '2.0', '0.0', '0.0', 'TestArmatureObject0002', 'TestAnimationBoneName0002', 'TestFile0002', 'abn TestAnimationBoneName0002\\nkf 0 {\\nabh 2.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 2.0 0.0 0.0\\nrotq 2.0 2.0 0.0 0.0\\nsca 2.0 0.0 0.0\\n}\\n', "myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [2.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [2.0,2.0,0,0]\n        myArmaturePoseBone.scale = [2.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path='location',frame=2)\n        myArmaturePoseBone.keyframe_insert(data_path='rotation_quaternion',frame=2)\n        myArmaturePoseBone.keyframe_insert(data_path='scale',frame=2)\n        bpy.context.scene.frame_set(2)", '..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0002', '', '', '', '        myArmature = bpy.data.armatures.new("TestArmatureObject0002")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0002", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0002")\n        myArmatureBone.head = [2,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [2.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [2.0,2.0,0,0]\n        myArmaturePoseBone.scale = [2.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=2)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=2)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=2)\n        bpy.context.scene.frame_set(2)\n        wyanimation = WYAnimation()\n        wymodelmanager0002 = WYModelManager()\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0002.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0002\\nkf 0 {\\nabh 2.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 2.0 0.0 0.0\\nrotq 2.0 2.0 0.0 0.0\\nsca 2.0 0.0 0.0\\n}\\n")\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0002.wyan\') as content_file:\n            wymodelmanager0002.import_wyanimationbone(wyanimation, content_file) \n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale)\n        self.assertTrue(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (2.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (2.0,2.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (2.0,0.0,0.0))']
['TC_NC_0003', 'WYModelManager import_wyanimationbone function testing normal case 0003', 'Testing if the WYAnimationBone objects are imported from given path "abn TestAnimationBoneName0003\\nkf 0 {\\nabh 3.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 3.0 0.0 0.0\\nrotq 3.0 3.0 0.0 0.0\\nsca 3.0 0.0 0.0\\n}\\n" through "import_wyanimationbone" function resulting the data values imported from file is equal to the expected value where animation bone is name "TestArmatureObject0003" location vector value[3,0,0], rotation quaternion value [3.0,3.0,0.0,0.0] and scale vector value [3,0,0] on keyframe 3 is exported.', 'WYModelManager', 'import_wyanimationbone', 'void', 'wymodelmanager0003', 'myArmature = bpy.data.armatures.new("TestArmatureObject0003")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0003", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0003")\n        myArmatureBone.head = [3,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [3.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [3.0,3.0,0,0]\n        myArmaturePoseBone.scale = [3.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=3)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=3)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=3)\n        bpy.context.scene.frame_set(3)', 'with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0003.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0003\\nkf 0 {\\nabh 3.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 3.0 0.0 0.0\\nrotq 3.0 3.0 0.0 0.0\\nsca 3.0 0.0 0.0\\n}\\n")', 'wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (3.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (3.0,3.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (3.0,0.0,0.0)', '3', '[3,0,0]', '[0,0,0]', '3.0', '0.0', '0.0', 'TestArmatureObject0003', 'TestAnimationBoneName0003', 'TestFile0003', 'abn TestAnimationBoneName0003\\nkf 0 {\\nabh 3.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 3.0 0.0 0.0\\nrotq 3.0 3.0 0.0 0.0\\nsca 3.0 0.0 0.0\\n}\\n', "myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [3.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [3.0,3.0,0,0]\n        myArmaturePoseBone.scale = [3.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path='location',frame=3)\n        myArmaturePoseBone.keyframe_insert(data_path='rotation_quaternion',frame=3)\n        myArmaturePoseBone.keyframe_insert(data_path='scale',frame=3)\n        bpy.context.scene.frame_set(3)", '..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0003', '', '', '', '        myArmature = bpy.data.armatures.new("TestArmatureObject0003")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0003", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0003")\n        myArmatureBone.head = [3,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [3.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [3.0,3.0,0,0]\n        myArmaturePoseBone.scale = [3.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=3)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=3)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=3)\n        bpy.context.scene.frame_set(3)\n        wyanimation = WYAnimation()\n        wymodelmanager0003 = WYModelManager()\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0003.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0003\\nkf 0 {\\nabh 3.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 3.0 0.0 0.0\\nrotq 3.0 3.0 0.0 0.0\\nsca 3.0 0.0 0.0\\n}\\n")\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0003.wyan\') as content_file:\n            wymodelmanager0003.import_wyanimationbone(wyanimation, content_file) \n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale)\n        self.assertTrue(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (3.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (3.0,3.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (3.0,0.0,0.0))']
['TC_NC_0004', 'WYModelManager import_wyanimationbone function testing normal case 0004', 'Testing if the WYAnimationBone objects are imported from given path "abn TestAnimationBoneName0004\\nkf 0 {\\nabh 4.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 4.0 0.0 0.0\\nrotq 4.0 4.0 0.0 0.0\\nsca 4.0 0.0 0.0\\n}\\n" through "import_wyanimationbone" function resulting the data values imported from file is equal to the expected value where animation bone is name "TestArmatureObject0004" location vector value[4,0,0], rotation quaternion value [4.0,4.0,0.0,0.0] and scale vector value [4,0,0] on keyframe 4 is exported.', 'WYModelManager', 'import_wyanimationbone', 'void', 'wymodelmanager0004', 'myArmature = bpy.data.armatures.new("TestArmatureObject0004")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0004", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0004")\n        myArmatureBone.head = [4,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [4.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [4.0,4.0,0,0]\n        myArmaturePoseBone.scale = [4.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=4)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=4)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=4)\n        bpy.context.scene.frame_set(4)', 'with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0004.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0004\\nkf 0 {\\nabh 4.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 4.0 0.0 0.0\\nrotq 4.0 4.0 0.0 0.0\\nsca 4.0 0.0 0.0\\n}\\n")', 'wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (4.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (4.0,4.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (4.0,0.0,0.0)', '4', '[4,0,0]', '[0,0,0]', '4.0', '0.0', '0.0', 'TestArmatureObject0004', 'TestAnimationBoneName0004', 'TestFile0004', 'abn TestAnimationBoneName0004\\nkf 0 {\\nabh 4.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 4.0 0.0 0.0\\nrotq 4.0 4.0 0.0 0.0\\nsca 4.0 0.0 0.0\\n}\\n', "myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [4.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [4.0,4.0,0,0]\n        myArmaturePoseBone.scale = [4.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path='location',frame=4)\n        myArmaturePoseBone.keyframe_insert(data_path='rotation_quaternion',frame=4)\n        myArmaturePoseBone.keyframe_insert(data_path='scale',frame=4)\n        bpy.context.scene.frame_set(4)", '..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0004', '', '', '', '        myArmature = bpy.data.armatures.new("TestArmatureObject0004")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0004", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0004")\n        myArmatureBone.head = [4,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [4.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [4.0,4.0,0,0]\n        myArmaturePoseBone.scale = [4.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=4)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=4)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=4)\n        bpy.context.scene.frame_set(4)\n        wyanimation = WYAnimation()\n        wymodelmanager0004 = WYModelManager()\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0004.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0004\\nkf 0 {\\nabh 4.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 4.0 0.0 0.0\\nrotq 4.0 4.0 0.0 0.0\\nsca 4.0 0.0 0.0\\n}\\n")\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0004.wyan\') as content_file:\n            wymodelmanager0004.import_wyanimationbone(wyanimation, content_file) \n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale)\n        self.assertTrue(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (4.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (4.0,4.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (4.0,0.0,0.0))']
['TC_NC_0005', 'WYModelManager import_wyanimationbone function testing normal case 0005', 'Testing if the WYAnimationBone objects are imported from given path "abn TestAnimationBoneName0005\\nkf 0 {\\nabh 5.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 5.0 0.0 0.0\\nrotq 5.0 5.0 0.0 0.0\\nsca 5.0 0.0 0.0\\n}\\n" through "import_wyanimationbone" function resulting the data values imported from file is equal to the expected value where animation bone is name "TestArmatureObject0005" location vector value[5,0,0], rotation quaternion value [5.0,5.0,0.0,0.0] and scale vector value [5,0,0] on keyframe 5 is exported.', 'WYModelManager', 'import_wyanimationbone', 'void', 'wymodelmanager0005', 'myArmature = bpy.data.armatures.new("TestArmatureObject0005")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0005", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0005")\n        myArmatureBone.head = [5,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [5.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [5.0,5.0,0,0]\n        myArmaturePoseBone.scale = [5.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=5)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=5)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=5)\n        bpy.context.scene.frame_set(5)', 'with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0005.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0005\\nkf 0 {\\nabh 5.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 5.0 0.0 0.0\\nrotq 5.0 5.0 0.0 0.0\\nsca 5.0 0.0 0.0\\n}\\n")', 'wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (5.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (5.0,5.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (5.0,0.0,0.0)', '5', '[5,0,0]', '[0,0,0]', '5.0', '0.0', '0.0', 'TestArmatureObject0005', 'TestAnimationBoneName0005', 'TestFile0005', 'abn TestAnimationBoneName0005\\nkf 0 {\\nabh 5.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 5.0 0.0 0.0\\nrotq 5.0 5.0 0.0 0.0\\nsca 5.0 0.0 0.0\\n}\\n', "myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [5.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [5.0,5.0,0,0]\n        myArmaturePoseBone.scale = [5.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path='location',frame=5)\n        myArmaturePoseBone.keyframe_insert(data_path='rotation_quaternion',frame=5)\n        myArmaturePoseBone.keyframe_insert(data_path='scale',frame=5)\n        bpy.context.scene.frame_set(5)", '..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0005', '', '', '', '        myArmature = bpy.data.armatures.new("TestArmatureObject0005")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0005", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0005")\n        myArmatureBone.head = [5,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [5.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [5.0,5.0,0,0]\n        myArmaturePoseBone.scale = [5.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=5)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=5)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=5)\n        bpy.context.scene.frame_set(5)\n        wyanimation = WYAnimation()\n        wymodelmanager0005 = WYModelManager()\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0005.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0005\\nkf 0 {\\nabh 5.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 5.0 0.0 0.0\\nrotq 5.0 5.0 0.0 0.0\\nsca 5.0 0.0 0.0\\n}\\n")\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0005.wyan\') as content_file:\n            wymodelmanager0005.import_wyanimationbone(wyanimation, content_file) \n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale)\n        self.assertTrue(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (5.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (5.0,5.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (5.0,0.0,0.0))']
['TC_NC_0006', 'WYModelManager import_wyanimationbone function testing normal case 0006', 'Testing if the WYAnimationBone objects are imported from given path "abn TestAnimationBoneName0006\\nkf 0 {\\nabh 6.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 6.0 0.0 0.0\\nrotq 6.0 6.0 0.0 0.0\\nsca 6.0 0.0 0.0\\n}\\n" through "import_wyanimationbone" function resulting the data values imported from file is equal to the expected value where animation bone is name "TestArmatureObject0006" location vector value[6,0,0], rotation quaternion value [6.0,6.0,0.0,0.0] and scale vector value [6,0,0] on keyframe 6 is exported.', 'WYModelManager', 'import_wyanimationbone', 'void', 'wymodelmanager0006', 'myArmature = bpy.data.armatures.new("TestArmatureObject0006")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0006", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0006")\n        myArmatureBone.head = [6,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [6.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [6.0,6.0,0,0]\n        myArmaturePoseBone.scale = [6.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=6)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=6)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=6)\n        bpy.context.scene.frame_set(6)', 'with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0006.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0006\\nkf 0 {\\nabh 6.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 6.0 0.0 0.0\\nrotq 6.0 6.0 0.0 0.0\\nsca 6.0 0.0 0.0\\n}\\n")', 'wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (6.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (6.0,6.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (6.0,0.0,0.0)', '6', '[6,0,0]', '[0,0,0]', '6.0', '0.0', '0.0', 'TestArmatureObject0006', 'TestAnimationBoneName0006', 'TestFile0006', 'abn TestAnimationBoneName0006\\nkf 0 {\\nabh 6.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 6.0 0.0 0.0\\nrotq 6.0 6.0 0.0 0.0\\nsca 6.0 0.0 0.0\\n}\\n', "myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [6.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [6.0,6.0,0,0]\n        myArmaturePoseBone.scale = [6.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path='location',frame=6)\n        myArmaturePoseBone.keyframe_insert(data_path='rotation_quaternion',frame=6)\n        myArmaturePoseBone.keyframe_insert(data_path='scale',frame=6)\n        bpy.context.scene.frame_set(6)", '..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0006', '', '', '', '        myArmature = bpy.data.armatures.new("TestArmatureObject0006")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0006", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0006")\n        myArmatureBone.head = [6,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [6.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [6.0,6.0,0,0]\n        myArmaturePoseBone.scale = [6.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=6)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=6)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=6)\n        bpy.context.scene.frame_set(6)\n        wyanimation = WYAnimation()\n        wymodelmanager0006 = WYModelManager()\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0006.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0006\\nkf 0 {\\nabh 6.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 6.0 0.0 0.0\\nrotq 6.0 6.0 0.0 0.0\\nsca 6.0 0.0 0.0\\n}\\n")\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0006.wyan\') as content_file:\n            wymodelmanager0006.import_wyanimationbone(wyanimation, content_file) \n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale)\n        self.assertTrue(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (6.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (6.0,6.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (6.0,0.0,0.0))']
['TC_NC_0007', 'WYModelManager import_wyanimationbone function testing normal case 0007', 'Testing if the WYAnimationBone objects are imported from given path "abn TestAnimationBoneName0007\\nkf 0 {\\nabh 7.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 7.0 0.0 0.0\\nrotq 7.0 7.0 0.0 0.0\\nsca 7.0 0.0 0.0\\n}\\n" through "import_wyanimationbone" function resulting the data values imported from file is equal to the expected value where animation bone is name "TestArmatureObject0007" location vector value[7,0,0], rotation quaternion value [7.0,7.0,0.0,0.0] and scale vector value [7,0,0] on keyframe 7 is exported.', 'WYModelManager', 'import_wyanimationbone', 'void', 'wymodelmanager0007', 'myArmature = bpy.data.armatures.new("TestArmatureObject0007")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0007", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0007")\n        myArmatureBone.head = [7,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [7.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [7.0,7.0,0,0]\n        myArmaturePoseBone.scale = [7.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=7)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=7)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=7)\n        bpy.context.scene.frame_set(7)', 'with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0007.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0007\\nkf 0 {\\nabh 7.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 7.0 0.0 0.0\\nrotq 7.0 7.0 0.0 0.0\\nsca 7.0 0.0 0.0\\n}\\n")', 'wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (7.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (7.0,7.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (7.0,0.0,0.0)', '7', '[7,0,0]', '[0,0,0]', '7.0', '0.0', '0.0', 'TestArmatureObject0007', 'TestAnimationBoneName0007', 'TestFile0007', 'abn TestAnimationBoneName0007\\nkf 0 {\\nabh 7.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 7.0 0.0 0.0\\nrotq 7.0 7.0 0.0 0.0\\nsca 7.0 0.0 0.0\\n}\\n', "myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [7.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [7.0,7.0,0,0]\n        myArmaturePoseBone.scale = [7.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path='location',frame=7)\n        myArmaturePoseBone.keyframe_insert(data_path='rotation_quaternion',frame=7)\n        myArmaturePoseBone.keyframe_insert(data_path='scale',frame=7)\n        bpy.context.scene.frame_set(7)", '..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0007', '', '', '', '        myArmature = bpy.data.armatures.new("TestArmatureObject0007")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0007", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0007")\n        myArmatureBone.head = [7,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [7.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [7.0,7.0,0,0]\n        myArmaturePoseBone.scale = [7.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=7)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=7)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=7)\n        bpy.context.scene.frame_set(7)\n        wyanimation = WYAnimation()\n        wymodelmanager0007 = WYModelManager()\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0007.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0007\\nkf 0 {\\nabh 7.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 7.0 0.0 0.0\\nrotq 7.0 7.0 0.0 0.0\\nsca 7.0 0.0 0.0\\n}\\n")\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0007.wyan\') as content_file:\n            wymodelmanager0007.import_wyanimationbone(wyanimation, content_file) \n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale)\n        self.assertTrue(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (7.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (7.0,7.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (7.0,0.0,0.0))']
['TC_NC_0008', 'WYModelManager import_wyanimationbone function testing normal case 0008', 'Testing if the WYAnimationBone objects are imported from given path "abn TestAnimationBoneName0008\\nkf 0 {\\nabh 8.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 8.0 0.0 0.0\\nrotq 8.0 8.0 0.0 0.0\\nsca 8.0 0.0 0.0\\n}\\n" through "import_wyanimationbone" function resulting the data values imported from file is equal to the expected value where animation bone is name "TestArmatureObject0008" location vector value[8,0,0], rotation quaternion value [8.0,8.0,0.0,0.0] and scale vector value [8,0,0] on keyframe 8 is exported.', 'WYModelManager', 'import_wyanimationbone', 'void', 'wymodelmanager0008', 'myArmature = bpy.data.armatures.new("TestArmatureObject0008")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0008", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0008")\n        myArmatureBone.head = [8,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [8.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [8.0,8.0,0,0]\n        myArmaturePoseBone.scale = [8.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=8)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=8)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=8)\n        bpy.context.scene.frame_set(8)', 'with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0008.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0008\\nkf 0 {\\nabh 8.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 8.0 0.0 0.0\\nrotq 8.0 8.0 0.0 0.0\\nsca 8.0 0.0 0.0\\n}\\n")', 'wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (8.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (8.0,8.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (8.0,0.0,0.0)', '8', '[8,0,0]', '[0,0,0]', '8.0', '0.0', '0.0', 'TestArmatureObject0008', 'TestAnimationBoneName0008', 'TestFile0008', 'abn TestAnimationBoneName0008\\nkf 0 {\\nabh 8.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 8.0 0.0 0.0\\nrotq 8.0 8.0 0.0 0.0\\nsca 8.0 0.0 0.0\\n}\\n', "myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [8.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [8.0,8.0,0,0]\n        myArmaturePoseBone.scale = [8.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path='location',frame=8)\n        myArmaturePoseBone.keyframe_insert(data_path='rotation_quaternion',frame=8)\n        myArmaturePoseBone.keyframe_insert(data_path='scale',frame=8)\n        bpy.context.scene.frame_set(8)", '..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0008', '', '', '', '        myArmature = bpy.data.armatures.new("TestArmatureObject0008")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0008", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0008")\n        myArmatureBone.head = [8,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [8.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [8.0,8.0,0,0]\n        myArmaturePoseBone.scale = [8.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=8)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=8)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=8)\n        bpy.context.scene.frame_set(8)\n        wyanimation = WYAnimation()\n        wymodelmanager0008 = WYModelManager()\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0008.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0008\\nkf 0 {\\nabh 8.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 8.0 0.0 0.0\\nrotq 8.0 8.0 0.0 0.0\\nsca 8.0 0.0 0.0\\n}\\n")\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0008.wyan\') as content_file:\n            wymodelmanager0008.import_wyanimationbone(wyanimation, content_file) \n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale)\n        self.assertTrue(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (8.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (8.0,8.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (8.0,0.0,0.0))']
['TC_NC_0009', 'WYModelManager import_wyanimationbone function testing normal case 0009', 'Testing if the WYAnimationBone objects are imported from given path "abn TestAnimationBoneName0009\\nkf 0 {\\nabh 9.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 9.0 0.0 0.0\\nrotq 9.0 9.0 0.0 0.0\\nsca 9.0 0.0 0.0\\n}\\n" through "import_wyanimationbone" function resulting the data values imported from file is equal to the expected value where animation bone is name "TestArmatureObject0009" location vector value[9,0,0], rotation quaternion value [9.0,9.0,0.0,0.0] and scale vector value [9,0,0] on keyframe 9 is exported.', 'WYModelManager', 'import_wyanimationbone', 'void', 'wymodelmanager0009', 'myArmature = bpy.data.armatures.new("TestArmatureObject0009")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0009", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0009")\n        myArmatureBone.head = [9,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [9.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [9.0,9.0,0,0]\n        myArmaturePoseBone.scale = [9.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=9)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=9)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=9)\n        bpy.context.scene.frame_set(9)', 'with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0009.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0009\\nkf 0 {\\nabh 9.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 9.0 0.0 0.0\\nrotq 9.0 9.0 0.0 0.0\\nsca 9.0 0.0 0.0\\n}\\n")', 'wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (9.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (9.0,9.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (9.0,0.0,0.0)', '9', '[9,0,0]', '[0,0,0]', '9.0', '0.0', '0.0', 'TestArmatureObject0009', 'TestAnimationBoneName0009', 'TestFile0009', 'abn TestAnimationBoneName0009\\nkf 0 {\\nabh 9.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 9.0 0.0 0.0\\nrotq 9.0 9.0 0.0 0.0\\nsca 9.0 0.0 0.0\\n}\\n', "myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [9.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [9.0,9.0,0,0]\n        myArmaturePoseBone.scale = [9.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path='location',frame=9)\n        myArmaturePoseBone.keyframe_insert(data_path='rotation_quaternion',frame=9)\n        myArmaturePoseBone.keyframe_insert(data_path='scale',frame=9)\n        bpy.context.scene.frame_set(9)", '..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0009', '', '', '', '        myArmature = bpy.data.armatures.new("TestArmatureObject0009")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0009", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0009")\n        myArmatureBone.head = [9,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [9.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [9.0,9.0,0,0]\n        myArmaturePoseBone.scale = [9.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=9)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=9)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=9)\n        bpy.context.scene.frame_set(9)\n        wyanimation = WYAnimation()\n        wymodelmanager0009 = WYModelManager()\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0009.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0009\\nkf 0 {\\nabh 9.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 9.0 0.0 0.0\\nrotq 9.0 9.0 0.0 0.0\\nsca 9.0 0.0 0.0\\n}\\n")\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0009.wyan\') as content_file:\n            wymodelmanager0009.import_wyanimationbone(wyanimation, content_file) \n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale)\n        self.assertTrue(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (9.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (9.0,9.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (9.0,0.0,0.0))']
['TC_NC_0010', 'WYModelManager import_wyanimationbone function testing normal case 0010', 'Testing if the WYAnimationBone objects are imported from given path "abn TestAnimationBoneName0010\\nkf 0 {\\nabh 10.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 10.0 0.0 0.0\\nrotq 10.0 10.0 0.0 0.0\\nsca 10.0 0.0 0.0\\n}\\n" through "import_wyanimationbone" function resulting the data values imported from file is equal to the expected value where animation bone is name "TestArmatureObject0010" location vector value[10,0,0], rotation quaternion value [10.0,10.0,0.0,0.0] and scale vector value [10,0,0] on keyframe 10 is exported.', 'WYModelManager', 'import_wyanimationbone', 'void', 'wymodelmanager0010', 'myArmature = bpy.data.armatures.new("TestArmatureObject0010")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0010", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0010")\n        myArmatureBone.head = [10,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [10.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [10.0,10.0,0,0]\n        myArmaturePoseBone.scale = [10.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=10)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=10)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=10)\n        bpy.context.scene.frame_set(10)', 'with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0010.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0010\\nkf 0 {\\nabh 10.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 10.0 0.0 0.0\\nrotq 10.0 10.0 0.0 0.0\\nsca 10.0 0.0 0.0\\n}\\n")', 'wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (10.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (10.0,10.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (10.0,0.0,0.0)', '10', '[10,0,0]', '[0,0,0]', '10.0', '0.0', '0.0', 'TestArmatureObject0010', 'TestAnimationBoneName0010', 'TestFile0010', 'abn TestAnimationBoneName0010\\nkf 0 {\\nabh 10.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 10.0 0.0 0.0\\nrotq 10.0 10.0 0.0 0.0\\nsca 10.0 0.0 0.0\\n}\\n', "myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [10.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [10.0,10.0,0,0]\n        myArmaturePoseBone.scale = [10.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path='location',frame=10)\n        myArmaturePoseBone.keyframe_insert(data_path='rotation_quaternion',frame=10)\n        myArmaturePoseBone.keyframe_insert(data_path='scale',frame=10)\n        bpy.context.scene.frame_set(10)", '..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0010', '', '', '', '        myArmature = bpy.data.armatures.new("TestArmatureObject0010")\n        myArmatureObject = bpy.data.objects.new("TestArmatureObject0010", myArmature)\n        bpy.context.scene.objects.link(myArmatureObject)\n        bpy.context.scene.objects.active = myArmatureObject\n        bpy.ops.object.mode_set(mode=\'EDIT\')  \n        myArmatureObject.select = True\n        myArmatureBone = myArmatureObject.data.edit_bones.new("TestAnimationBoneName0010")\n        myArmatureBone.head = [10,0,0]\n        myArmatureBone.tail = [0,0,0]\n        bpy.ops.object.mode_set(mode=\'OBJECT\')\n        myArmaturePoseBone = myArmatureObject.pose.bones[myArmatureBone.name]\n        myArmaturePoseBone.location = [10.0, 0, 0]\n        myArmaturePoseBone.rotation_quaternion = [10.0,10.0,0,0]\n        myArmaturePoseBone.scale = [10.0, 0, 0]\n        myArmaturePoseBone.keyframe_insert(data_path=\'location\',frame=10)\n        myArmaturePoseBone.keyframe_insert(data_path=\'rotation_quaternion\',frame=10)\n        myArmaturePoseBone.keyframe_insert(data_path=\'scale\',frame=10)\n        bpy.context.scene.frame_set(10)\n        wyanimation = WYAnimation()\n        wymodelmanager0010 = WYModelManager()\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0010.wyan\', \'w+\') as file:\n            file.write("abn TestAnimationBoneName0010\\nkf 0 {\\nabh 10.0 0.0 0.0\\nabt 0.0 0.0 0.0\\nloc 10.0 0.0 0.0\\nrotq 10.0 10.0 0.0 0.0\\nsca 10.0 0.0 0.0\\n}\\n")\n        with open(os.getcwd() + "\\\\" + \'..\\\\..\\\\test\\\\WYModelManagerTestCases_import_wyanimationbone\\\\TestFile0010.wyan\') as content_file:\n            wymodelmanager0010.import_wyanimationbone(wyanimation, content_file) \n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion)\n        print(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale)\n        self.assertTrue(wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_location == (10.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_rotation_quaternion == (10.0,10.0,0.0,0.0) and wyanimation.animation_bones_arr[0].animation_bone_keyframe_arr[0].animation_bone_scale == (10.0,0.0,0.0))']
